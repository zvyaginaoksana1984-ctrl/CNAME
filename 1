<!doctype html>
<html lang="ru">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>–ó–≤—É–∫–æ–≤–∞—è –ø–∞–º—è—Ç—å üéµ</title>
<style>
  body{
    background:#101822;
    color:#fff;
    font-family:Arial, sans-serif;
    display:flex;
    align-items:center;
    justify-content:center;
    height:100vh;
    margin:0;
  }
  .game{
    text-align:center;
  }
  h1{ margin-bottom:10px; }
  .tiles{
    display:grid;
    grid-template-columns:repeat(2,120px);
    gap:15px;
    justify-content:center;
    margin-top:20px;
  }
  .tile{
    width:120px; height:120px;
    border-radius:15px;
    cursor:pointer;
    transition:opacity 0.2s;
    display:flex; align-items:center; justify-content:center;
    font-weight:bold;
    font-size:18px;
    color:#000;
    user-select:none;
  }
  .tile:active{ transform:scale(0.97); }
  #startBtn{
    padding:10px 20px;
    border:none;
    border-radius:8px;
    margin-top:15px;
    cursor:pointer;
    font-size:16px;
  }
  #status{ margin-top:12px; font-size:18px; }
</style>
</head>
<body>
<div class="game">
  <h1>üé∂ –ó–≤—É–∫–æ–≤–∞—è –ø–∞–º—è—Ç—å</h1>
  <div class="tiles">
    <div class="tile" id="t0" style="background:#ff6b6b">–î–æ</div>
    <div class="tile" id="t1" style="background:#6bc5ff">–†–µ</div>
    <div class="tile" id="t2" style="background:#6bff95">–ú–∏</div>
    <div class="tile" id="t3" style="background:#ffe66b">–§–∞</div>
  </div>
  <button id="startBtn">‚ñ∂ –°—Ç–∞—Ä—Ç</button>
  <div id="status"></div>
</div>

<script>
const tiles = document.querySelectorAll('.tile');
const statusEl = document.getElementById('status');
const startBtn = document.getElementById('startBtn');

let sequence = [];
let playerInput = [];
let level = 0;
let playing = false;

// –∑–≤—É–∫–æ–≤—ã–µ —á–∞—Å—Ç–æ—Ç—ã –Ω–æ—Ç (–ø—Ä–∏–º–µ—Ä: –î–æ, –†–µ, –ú–∏, –§–∞)
const freqs = [261.6, 293.7, 329.6, 349.2];
let ctx;

function playTone(freq, dur=400){
  if(!ctx) ctx = new (window.AudioContext||window.webkitAudioContext)();
  const osc = ctx.createOscillator();
  const gain = ctx.createGain();
  osc.type = "sine";
  osc.frequency.value = freq;
  osc.connect(gain);
  gain.connect(ctx.destination);
  osc.start();
  gain.gain.setValueAtTime(0.2, ctx.currentTime);
  gain.gain.exponentialRampToValueAtTime(0.001, ctx.currentTime + dur/1000);
  osc.stop(ctx.currentTime + dur/1000);
}

function flashTile(i){
  const t = tiles[i];
  t.style.opacity = "0.5";
  playTone(freqs[i]);
  setTimeout(()=>{ t.style.opacity = "1"; }, 300);
}

function nextRound(){
  level++;
  playerInput = [];
  sequence.push(Math.floor(Math.random()*4));
  statusEl.textContent = "–†–∞—É–Ω–¥ " + level;
  playSequence();
}

function playSequence(){
  playing = true;
  let i=0;
  const interval = setInterval(()=>{
    flashTile(sequence[i]);
    i++;
    if(i >= sequence.length){
      clearInterval(interval);
      setTimeout(()=> playing=false, 500);
    }
  }, 700);
}

function handleTile(i){
  if(playing) return;
  flashTile(i);
  playerInput.push(i);
  const correct = sequence[playerInput.length-1] === i;
  if(!correct){
    statusEl.textContent = "‚ùå –û—à–∏–±–∫–∞! –ò—Ç–æ–≥: " + (level-1) + " —Ä–∞—É–Ω–¥–æ–≤.";
    sequence=[]; level=0;
    return;
  }
  if(playerInput.length === sequence.length){
    setTimeout(nextRound, 800);
  }
}

tiles.forEach((t,i)=> t.addEventListener('click', ()=> handleTile(i)) );

startBtn.addEventListener('click', ()=>{
  sequence=[]; level=0;
  statusEl.textContent = "–ì–æ—Ç–æ–≤—å—Å—è...";
  setTimeout(nextRound,1000);
});
</script>
</body>
</html>